
---
- name: Install Hawkular Services into openshift
  hosts: localhost
  vars_files:
    - hawkular-services-ansible-vars.yaml
  tasks:
    - name: "Flush iptables rules. Because of DNS we need to run: sudo iptables -F"
      become: yes
      become_method: sudo
      shell: "iptables -F"
      when: "flush_ip_tables"

    - name: Install the libselinux-python package
      become: yes
      become_method: sudo
      package:
        name: libselinux-python
        state: present

    - name: Create OpenShift Cluster (make sure you have the insecure-registry added)
      shell: "oc cluster up --version={{ openshift_cluster_version }} --metrics={{ openshift_use_metrics }}"
      register: command_result
      when: "create_openshift_cluster"
      failed_when: "'OpenShift is already running' not in command_result.stdout and command_result.rc != 0"

    - name: Create a new OpenShift project
      shell: "oc new-project {{ project_name }}"
      register: command_result
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"

    - name: Log in as system:admin
      shell: "oc login -u system:admin"

    - name: Create secret for SSL Certificates
      shell: "oc secret new {{ secret_name }} {{ ssl_private_key }} {{ ssl_public_key }}"

    - name: Create service account for secret
      shell: "oc create serviceaccount {{ service_account }} -n {{ project_name }}"

    - name: Add view role for service account
      shell: "oc policy add-role-to-user view system:serviceaccount:{{ project_name }}:{{ service_account }} -n {{ project_name }}"

    - name: Link secret with service account
      shell: "oc secrets link serviceaccount/{{ service_account }} secret/{{ secret_name }}"

    - name: Install Hawkular Services
      shell: >
        oc process -f ./hawkular-services-ephemeral-ssl.yaml
        --param HAWKULAR_SERVICES_IMAGE={{ hawkular_services_image }}
        --param CASSANDRA_IMAGE={{ cassandra_image }}
        --param ROUTE_HOSTNAME={{ route_hostname }}
        --param HAWKULAR_USE_SSL=true
        --param HAWKULAR_SECRET={{ secret_name }}
        --param SERVICE_ACCOUNT_NAME={{ service_account }}
        `[ -z "{{ hawkular_user }}" ] || echo "--param HAWKULAR_USER={{ hawkular_user }}"` \
        `[ -z "{{ hawkular_password }}" ] || echo "--param HAWKULAR_PASSWORD={{ hawkular_password }}"` \
        --param ROUTE_NAME={{ route_name }}
        | oc create -f -
      register: command_result
      failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
      changed_when: "'exists' not in command_result.stderr"

    - name: Get the hawkular-services address
      shell: "oc get route {{ route_name }} | grep {{ route_name }} | awk '{print $2}'"
      register: hawkular_services_address

    - name: Get the hawkular-services username
      shell: oc env dc/hawkular-services --list | grep HAWKULAR_USER | cut -f2 -d'='
      register: real_hawkular_user

    - name: Get the hawkular-services password
      shell: oc env dc/hawkular-services --list | grep HAWKULAR_PASSWORD | cut -f2 -d'='
      register: real_hawkular_password

    - name: Print out the hawkular-services address
      debug:
        msg:
          - "The hostname for the Hawkular Services service is: https://{{ hawkular_services_address.stdout }}"
          - "Username: {{ real_hawkular_user.stdout }}"
          - "Password: {{ real_hawkular_password.stdout }}"
          - "It may take a minute or two to spin the containers. Especially if it is pulling the images."
          - "Consider running   watch oc get pod -l name=hawkular-services    ..to find out when it is ready."
